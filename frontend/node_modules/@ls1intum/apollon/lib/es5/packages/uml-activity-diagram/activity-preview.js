"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.composeActivityPreview = void 0;
var tslib_1 = require("tslib");
var uml_activity_action_node_1 = require("./uml-activity-action-node/uml-activity-action-node");
var uml_activity_final_node_1 = require("./uml-activity-final-node/uml-activity-final-node");
var uml_activity_fork_node_horizontal_1 = require("./uml-activity-fork-node-horizontal/uml-activity-fork-node-horizontal");
var uml_activity_fork_node_1 = require("./uml-activity-fork-node/uml-activity-fork-node");
var uml_activity_initial_node_1 = require("./uml-activity-initial-node/uml-activity-initial-node");
var uml_activity_merge_node_1 = require("./uml-activity-merge-node/uml-activity-merge-node");
var uml_activity_object_node_1 = require("./uml-activity-object-node/uml-activity-object-node");
var uml_activity_1 = require("./uml-activity/uml-activity");
var composeActivityPreview = function (layer, translate) {
    var elements = [];
    uml_activity_fork_node_1.UMLActivityForkNode.defaultWidth = Math.round(20 / 10) * 10;
    uml_activity_fork_node_1.UMLActivityForkNode.defaultHeight = Math.round(60 / 10) * 10;
    uml_activity_fork_node_horizontal_1.UMLActivityForkNodeHorizontal.defaultWidth = Math.round(60 / 10) * 10;
    uml_activity_fork_node_horizontal_1.UMLActivityForkNodeHorizontal.defaultHeight = Math.round(20 / 10) * 10;
    // Activity
    var activity = new uml_activity_1.UMLActivity({ name: translate('packages.ActivityDiagram.Activity') });
    activity.bounds = tslib_1.__assign(tslib_1.__assign({}, activity.bounds), { width: activity.bounds.width, height: activity.bounds.height });
    elements.push(activity);
    // Activity Initial Node
    var activityInitialNode = new uml_activity_initial_node_1.UMLActivityInitialNode({
        bounds: { x: 0, y: 0, width: 45, height: 45 },
    });
    elements.push(activityInitialNode);
    // Activity Final Node
    var activityFinalNode = new uml_activity_final_node_1.UMLActivityFinalNode({
        bounds: { x: 0, y: 0, width: 45, height: 45 },
    });
    elements.push(activityFinalNode);
    // Activity Action Node
    var activityActionNode = new uml_activity_action_node_1.UMLActivityActionNode({
        name: translate('packages.ActivityDiagram.ActivityActionNode'),
    });
    activityActionNode.bounds = tslib_1.__assign(tslib_1.__assign({}, activityActionNode.bounds), { width: activityActionNode.bounds.width, height: activityActionNode.bounds.height });
    elements.push(activityActionNode);
    // Activity Object Node
    var activityObjectNode = new uml_activity_object_node_1.UMLActivityObjectNode({
        name: translate('packages.ActivityDiagram.ActivityObjectNode'),
    });
    activityObjectNode.bounds = tslib_1.__assign(tslib_1.__assign({}, activityObjectNode.bounds), { width: activityObjectNode.bounds.width, height: activityObjectNode.bounds.height });
    elements.push(activityObjectNode);
    // Activity Merge Node
    var activityMergeNode = new uml_activity_merge_node_1.UMLActivityMergeNode({ name: translate('packages.ActivityDiagram.ActivityMergeNode') });
    activityMergeNode.bounds = tslib_1.__assign(tslib_1.__assign({}, activityMergeNode.bounds), { width: activityMergeNode.bounds.width, height: activityMergeNode.bounds.height });
    elements.push(activityMergeNode);
    // Activity Fork Node
    var activityForkNode = new uml_activity_fork_node_1.UMLActivityForkNode();
    elements.push(activityForkNode);
    // Activity Fork Node Horizontal
    var activityForkNodeHorizontal = new uml_activity_fork_node_horizontal_1.UMLActivityForkNodeHorizontal();
    elements.push(activityForkNodeHorizontal);
    return elements;
};
exports.composeActivityPreview = composeActivityPreview;
//# sourceMappingURL=activity-preview.js.map