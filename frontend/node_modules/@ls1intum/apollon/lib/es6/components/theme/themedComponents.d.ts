export declare const ThemedPolyline: import("styled-components").StyledComponent<"polyline", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    fillColor: string | undefined;
    strokeColor: string | undefined;
    stroke: string;
    fill: string;
}, "fill" | "stroke" | "fillColor" | "strokeColor">;
export declare const ThemedPath: import("styled-components").StyledComponent<"path", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    fillColor: string | undefined;
    strokeColor: string | undefined;
    stroke: string;
    fill: string;
}, "fill" | "stroke" | "fillColor" | "strokeColor">;
export declare const ThemedPathContrast: import("styled-components").StyledComponent<"path", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    fillColor: string | undefined;
    strokeColor: string | undefined;
    stroke: string;
    fill: string;
}, "fill" | "stroke" | "fillColor" | "strokeColor">;
export declare const ThemedRect: import("styled-components").StyledComponent<"rect", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    fillColor: string | undefined;
    strokeColor: string | undefined;
    stroke: string;
    fill: string;
}, "fill" | "stroke" | "fillColor" | "strokeColor">;
export declare const ThemedRectContrast: import("styled-components").StyledComponent<"rect", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    fillColor: string | undefined;
    strokeColor: string | undefined;
    stroke: string;
    fill: string;
}, "fill" | "stroke" | "fillColor" | "strokeColor">;
export declare const ThemedCircle: import("styled-components").StyledComponent<"circle", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    fillColor: string | undefined;
    strokeColor: string | undefined;
    stroke: string;
    fill: string;
}, "fill" | "stroke" | "fillColor" | "strokeColor">;
export declare const ThemedCircleContrast: import("styled-components").StyledComponent<"circle", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    fillColor: string | undefined;
    strokeColor: string | undefined;
    stroke: string;
    fill: string;
}, "fill" | "stroke" | "fillColor" | "strokeColor">;
export declare const ThemedEllipse: import("styled-components").StyledComponent<"ellipse", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    fillColor: string | undefined;
    strokeColor: string | undefined;
    stroke: string;
    fill: string;
}, "fill" | "stroke" | "fillColor" | "strokeColor">;
export declare const ThemedLine: import("styled-components").StyledComponent<"line", {
    color: {
        primary: string;
        secondary: string;
        warningYellow: string;
        background: string;
        backgroundVariant: string;
        grid: string;
        primaryContrast: string;
        gray: string;
        grayAccent: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    strokeColor: string | undefined;
    stroke: string;
}, "stroke" | "strokeColor">;
