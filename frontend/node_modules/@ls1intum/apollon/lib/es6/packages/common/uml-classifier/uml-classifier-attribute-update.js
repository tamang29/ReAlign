import React, { useState } from 'react';
import styled from 'styled-components';
import { Button } from '../../../components/controls/button/button';
import { ColorButton } from '../../../components/controls/color-button/color-button';
import { TrashIcon } from '../../../components/controls/icon/trash';
import { Textfield } from '../../../components/controls/textfield/textfield';
import { StylePane } from '../../../components/style-pane/style-pane';
const Flex = styled.div `
  display: flex;
  align-items: baseline;
  justify-content: space-between;
`;
const UmlAttributeUpdate = ({ id, onRefChange, value, onChange, onSubmitKeyUp, onDelete, element }) => {
    const [colorOpen, setColorOpen] = useState(false);
    const toggleColor = () => {
        setColorOpen(!colorOpen);
    };
    const handleNameChange = (newName) => {
        onChange(id, { name: newName });
    };
    const handleDelete = () => {
        onDelete(id)();
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(Flex, null,
            React.createElement(Textfield, { ref: onRefChange, gutter: true, value: value, onChange: handleNameChange, onSubmitKeyUp: onSubmitKeyUp }),
            React.createElement(ColorButton, { onClick: toggleColor }),
            React.createElement(Button, { color: "link", tabIndex: -1, onClick: handleDelete },
                React.createElement(TrashIcon, null))),
        React.createElement(StylePane, { open: colorOpen, element: element, onColorChange: onChange, fillColor: true, textColor: true })));
};
export default UmlAttributeUpdate;
//# sourceMappingURL=uml-classifier-attribute-update.js.map