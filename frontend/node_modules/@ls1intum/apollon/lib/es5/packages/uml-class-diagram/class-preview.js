"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.composeClassPreview = void 0;
var tslib_1 = require("tslib");
var boundary_1 = require("../../utils/geometry/boundary");
var uml_classifier_1 = require("../common/uml-classifier/uml-classifier");
var uml_abstract_class_1 = require("./uml-abstract-class/uml-abstract-class");
var uml_class_attribute_1 = require("./uml-class-attribute/uml-class-attribute");
var uml_class_method_1 = require("./uml-class-method/uml-class-method");
var uml_class_package_1 = require("./uml-class-package/uml-class-package");
var uml_class_1 = require("./uml-class/uml-class");
var uml_enumeration_1 = require("./uml-enumeration/uml-enumeration");
var uml_interface_1 = require("./uml-interface/uml-interface");
var composeClassPreview = function (layer, translate) {
    var elements = [];
    uml_classifier_1.UMLClassifier.stereotypeHeaderHeight = (0, boundary_1.computeDimension)(1.0, 50);
    uml_classifier_1.UMLClassifier.nonStereotypeHeaderHeight = (0, boundary_1.computeDimension)(1.0, 40);
    // UML Package
    var umlPackage = new uml_class_package_1.UMLClassPackage({ name: translate('packages.ClassDiagram.Package') });
    umlPackage.bounds = tslib_1.__assign(tslib_1.__assign({}, umlPackage.bounds), { width: umlPackage.bounds.width, height: umlPackage.bounds.height });
    elements.push(umlPackage);
    // UML Class
    var umlClass = new uml_class_1.UMLClass({ name: translate('packages.ClassDiagram.Class') });
    umlClass.bounds = tslib_1.__assign(tslib_1.__assign({}, umlClass.bounds), { width: umlClass.bounds.width, height: umlClass.bounds.height });
    var umlClassAttribute = new uml_class_attribute_1.UMLClassAttribute({
        name: translate('sidebar.classAttribute'),
        owner: umlClass.id,
        bounds: {
            x: 0,
            y: 0,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    var umlClassMethod = new uml_class_method_1.UMLClassMethod({
        name: translate('sidebar.classMethod'),
        owner: umlClass.id,
        bounds: {
            x: 0,
            y: 0,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    umlClass.ownedElements = [umlClassAttribute.id, umlClassMethod.id];
    elements.push.apply(elements, tslib_1.__spreadArray([], tslib_1.__read(umlClass.render(layer, [umlClassAttribute, umlClassMethod])), false));
    // UML Abstract Class
    var umlAbstract = new uml_abstract_class_1.UMLAbstractClass({ name: translate('packages.ClassDiagram.AbstractClass') });
    umlAbstract.bounds = tslib_1.__assign(tslib_1.__assign({}, umlAbstract.bounds), { width: umlAbstract.bounds.width, height: umlAbstract.bounds.height });
    var umlAbstractAttribute = new uml_class_attribute_1.UMLClassAttribute({
        name: translate('sidebar.classAttribute'),
        owner: umlAbstract.id,
        bounds: {
            x: 0,
            y: 40,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    var umlAbstractMethod = new uml_class_method_1.UMLClassMethod({
        name: translate('sidebar.classMethod'),
        owner: umlAbstract.id,
        bounds: {
            x: 0,
            y: 70,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    umlAbstract.ownedElements = [umlAbstractAttribute.id, umlAbstractMethod.id];
    elements.push.apply(elements, tslib_1.__spreadArray([], tslib_1.__read(umlAbstract.render(layer, [umlAbstractAttribute, umlAbstractMethod])), false));
    // UML Interface
    var umlInterface = new uml_interface_1.UMLInterface({
        name: translate('packages.ClassDiagram.Interface'),
        bounds: { height: 110 },
    });
    umlInterface.bounds = tslib_1.__assign(tslib_1.__assign({}, umlInterface.bounds), { width: umlInterface.bounds.width, height: umlInterface.bounds.height });
    var umlInterfaceAttribute = new uml_class_attribute_1.UMLClassAttribute({
        name: translate('sidebar.classAttribute'),
        owner: umlInterface.id,
        bounds: {
            x: 0,
            y: 50,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    var umlInterfaceMethod = new uml_class_method_1.UMLClassMethod({
        name: translate('sidebar.classMethod'),
        owner: umlInterface.id,
        bounds: {
            x: 0,
            y: 80,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    umlInterface.ownedElements = [umlInterfaceAttribute.id, umlInterfaceMethod.id];
    elements.push.apply(elements, tslib_1.__spreadArray([], tslib_1.__read(umlInterface.render(layer, [umlInterfaceAttribute, umlInterfaceMethod])), false));
    // UML Enumeration
    var umlEnumeration = new uml_enumeration_1.UMLEnumeration({
        name: translate('packages.ClassDiagram.Enumeration'),
        bounds: { height: 140 },
    });
    umlEnumeration.bounds = tslib_1.__assign(tslib_1.__assign({}, umlEnumeration.bounds), { width: umlEnumeration.bounds.width, height: umlEnumeration.bounds.height });
    var umlEnumerationCase1 = new uml_class_attribute_1.UMLClassAttribute({
        name: translate('sidebar.enumAttribute') + ' 1',
        owner: umlEnumeration.id,
        bounds: {
            x: 0,
            y: 50,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    var umlEnumerationCase2 = new uml_class_attribute_1.UMLClassAttribute({
        name: translate('sidebar.enumAttribute') + ' 2',
        owner: umlEnumeration.id,
        bounds: {
            x: 0,
            y: 80,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    var umlEnumerationCase3 = new uml_class_attribute_1.UMLClassAttribute({
        name: translate('sidebar.enumAttribute') + ' 3',
        owner: umlEnumeration.id,
        bounds: {
            x: 0,
            y: 110,
            width: (0, boundary_1.computeDimension)(1.0, 200),
            height: (0, boundary_1.computeDimension)(1.0, 40),
        },
    });
    umlEnumeration.ownedElements = [umlEnumerationCase1.id, umlEnumerationCase2.id, umlEnumerationCase3.id];
    elements.push.apply(elements, tslib_1.__spreadArray([], tslib_1.__read(umlEnumeration.render(layer, [umlEnumerationCase1, umlEnumerationCase2, umlEnumerationCase3])), false));
    return elements;
};
exports.composeClassPreview = composeClassPreview;
//# sourceMappingURL=class-preview.js.map