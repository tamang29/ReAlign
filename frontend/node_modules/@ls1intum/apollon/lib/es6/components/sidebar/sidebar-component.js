import React, { Component } from 'react';
import { connect } from 'react-redux';
import { compose } from 'redux';
import { EditorRepository } from '../../services/editor/editor-repository';
import { ApollonMode } from '../../services/editor/editor-types';
import { CreatePane } from '../create-pane/create-pane';
import { localized } from '../i18n/localized';
import { Container } from './sidebar-styles';
const enhance = compose(localized, connect((state) => ({
    readonly: state.editor.readonly,
    mode: state.editor.mode,
    view: state.editor.view,
    selected: state.selected,
}), {
    changeView: EditorRepository.changeView,
}));
class SidebarComponent extends Component {
    constructor() {
        super(...arguments);
        this.toggleInteractiveElementsMode = (event) => {
            const { checked } = event.currentTarget;
            const view = checked ? "Exporting" /* ApollonView.Exporting */ : "Highlight" /* ApollonView.Highlight */;
            this.props.changeView(view);
        };
    }
    render() {
        if (this.props.readonly || this.props.mode === ApollonMode.Assessment)
            return null;
        return (React.createElement(Container, { id: "modeling-editor-sidebar", "data-cy": "modeling-editor-sidebar" },
            this.props.mode === ApollonMode.Exporting && (React.createElement("div", { className: "dropdown", style: { width: 128 } },
                React.createElement("select", { value: this.props.view, onChange: (event) => this.props.changeView(event.target.value), color: "primary" },
                    React.createElement("option", { value: "Modelling" /* ApollonView.Modelling */ }, this.props.translate('views.modelling')),
                    React.createElement("option", { value: "Exporting" /* ApollonView.Exporting */ }, this.props.translate('views.exporting'))))),
            this.props.view === "Modelling" /* ApollonView.Modelling */ ? (React.createElement(CreatePane, null)) : (React.createElement("label", { htmlFor: "toggleInteractiveElementsMode" },
                React.createElement("input", { id: "toggleInteractiveElementsMode", type: "checkbox", checked: this.props.view === "Exporting" /* ApollonView.Exporting */, onChange: this.toggleInteractiveElementsMode }),
                this.props.translate('views.highlight')))));
    }
}
export const Sidebar = enhance(SidebarComponent);
//# sourceMappingURL=sidebar-component.js.map