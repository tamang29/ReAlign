import { ActivityElementType } from './uml-activity-diagram';
import { ClassElementType } from './uml-class-diagram';
import { ComponentElementType } from './uml-component-diagram';
import { DeploymentElementType } from './uml-deployment-diagram';
import { ObjectElementType } from './uml-object-diagram';
import { UseCaseElementType } from './uml-use-case-diagram';
import { PetriNetElementType } from './uml-petri-net';
import { CommunicationElementType } from './uml-communication-diagram';
import { UMLDiagramType } from './diagram-type';
import { SyntaxTreeElementType } from './syntax-tree';
import { FlowchartElementType } from './flowchart';
import { ColorLegendElementType } from './common/color-legend';
import { ReachabilityGraphElementType } from './uml-reachability-graph';
import { BPMNElementType } from './bpmn';
export type UMLElementType = keyof typeof ClassElementType | keyof typeof ObjectElementType | keyof typeof ActivityElementType | keyof typeof UseCaseElementType | keyof typeof CommunicationElementType | keyof typeof ComponentElementType | keyof typeof DeploymentElementType | keyof typeof PetriNetElementType | keyof typeof ReachabilityGraphElementType | keyof typeof SyntaxTreeElementType | keyof typeof FlowchartElementType | keyof typeof ColorLegendElementType | keyof typeof BPMNElementType;
export declare const UMLElementType: {
    BPMNTask: "BPMNTask";
    BPMNSubprocess: "BPMNSubprocess";
    BPMNTransaction: "BPMNTransaction";
    BPMNCallActivity: "BPMNCallActivity";
    BPMNAnnotation: "BPMNAnnotation";
    BPMNStartEvent: "BPMNStartEvent";
    BPMNIntermediateEvent: "BPMNIntermediateEvent";
    BPMNEndEvent: "BPMNEndEvent";
    BPMNGateway: "BPMNGateway";
    BPMNDataObject: "BPMNDataObject";
    BPMNDataStore: "BPMNDataStore";
    BPMNPool: "BPMNPool";
    BPMNSwimlane: "BPMNSwimlane";
    BPMNGroup: "BPMNGroup";
    ColorLegend: "ColorLegend";
    FlowchartTerminal: "FlowchartTerminal";
    FlowchartProcess: "FlowchartProcess";
    FlowchartDecision: "FlowchartDecision";
    FlowchartInputOutput: "FlowchartInputOutput";
    FlowchartFunctionCall: "FlowchartFunctionCall";
    SyntaxTreeTerminal: "SyntaxTreeTerminal";
    SyntaxTreeNonterminal: "SyntaxTreeNonterminal";
    ReachabilityGraphMarking: "ReachabilityGraphMarking";
    PetriNetPlace: "PetriNetPlace";
    PetriNetTransition: "PetriNetTransition";
    DeploymentNode: "DeploymentNode";
    DeploymentComponent: "DeploymentComponent";
    DeploymentArtifact: "DeploymentArtifact";
    DeploymentInterface: "DeploymentInterface";
    Component: "Component";
    Subsystem: "Subsystem";
    ComponentInterface: "ComponentInterface";
    CommunicationLinkMessage: "CommunicationLinkMessage";
    UseCase: "UseCase";
    UseCaseActor: "UseCaseActor";
    UseCaseSystem: "UseCaseSystem";
    Activity: "Activity";
    ActivityActionNode: "ActivityActionNode";
    ActivityFinalNode: "ActivityFinalNode";
    ActivityForkNode: "ActivityForkNode";
    ActivityForkNodeHorizontal: "ActivityForkNodeHorizontal";
    ActivityInitialNode: "ActivityInitialNode";
    ActivityMergeNode: "ActivityMergeNode";
    ActivityObjectNode: "ActivityObjectNode";
    ObjectName: "ObjectName";
    ObjectAttribute: "ObjectAttribute";
    ObjectMethod: "ObjectMethod";
    Package: "Package";
    Class: "Class";
    AbstractClass: "AbstractClass";
    Interface: "Interface";
    Enumeration: "Enumeration";
    ClassAttribute: "ClassAttribute";
    ClassMethod: "ClassMethod";
};
export declare const UMLElementsForDiagram: {
    [key in UMLDiagramType]: any;
};
