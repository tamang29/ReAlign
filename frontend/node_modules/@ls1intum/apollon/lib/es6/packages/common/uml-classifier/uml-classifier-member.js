import { UMLElement } from '../../../services/uml-element/uml-element';
import { assign } from '../../../utils/fx/assign';
import { Text } from '../../../utils/svg/text';
export class UMLClassifierMember extends UMLElement {
    constructor(values) {
        super(values);
        this.bounds = { ...this.bounds, height: 30 };
        assign(this, values);
    }
    render(layer) {
        const radix = 10;
        const width = Text.size(layer, this.name).width + 20;
        this.bounds.width = Math.max(this.bounds.width, Math.round(width / radix) * radix);
        return [this];
    }
}
UMLClassifierMember.features = {
    ...UMLElement.features,
    hoverable: false,
    selectable: false,
    movable: false,
    resizable: false,
    connectable: false,
    droppable: false,
    updatable: false,
};
//# sourceMappingURL=uml-classifier-member.js.map