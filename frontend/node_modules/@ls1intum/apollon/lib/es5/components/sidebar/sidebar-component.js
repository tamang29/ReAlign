"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sidebar = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var react_redux_1 = require("react-redux");
var redux_1 = require("redux");
var editor_repository_1 = require("../../services/editor/editor-repository");
var editor_types_1 = require("../../services/editor/editor-types");
var create_pane_1 = require("../create-pane/create-pane");
var localized_1 = require("../i18n/localized");
var sidebar_styles_1 = require("./sidebar-styles");
var enhance = (0, redux_1.compose)(localized_1.localized, (0, react_redux_1.connect)(function (state) { return ({
    readonly: state.editor.readonly,
    mode: state.editor.mode,
    view: state.editor.view,
    selected: state.selected,
}); }, {
    changeView: editor_repository_1.EditorRepository.changeView,
}));
var SidebarComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SidebarComponent, _super);
    function SidebarComponent() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.toggleInteractiveElementsMode = function (event) {
            var checked = event.currentTarget.checked;
            var view = checked ? "Exporting" /* ApollonView.Exporting */ : "Highlight" /* ApollonView.Highlight */;
            _this.props.changeView(view);
        };
        return _this;
    }
    SidebarComponent.prototype.render = function () {
        var _this = this;
        if (this.props.readonly || this.props.mode === editor_types_1.ApollonMode.Assessment)
            return null;
        return (react_1.default.createElement(sidebar_styles_1.Container, { id: "modeling-editor-sidebar", "data-cy": "modeling-editor-sidebar" },
            this.props.mode === editor_types_1.ApollonMode.Exporting && (react_1.default.createElement("div", { className: "dropdown", style: { width: 128 } },
                react_1.default.createElement("select", { value: this.props.view, onChange: function (event) { return _this.props.changeView(event.target.value); }, color: "primary" },
                    react_1.default.createElement("option", { value: "Modelling" /* ApollonView.Modelling */ }, this.props.translate('views.modelling')),
                    react_1.default.createElement("option", { value: "Exporting" /* ApollonView.Exporting */ }, this.props.translate('views.exporting'))))),
            this.props.view === "Modelling" /* ApollonView.Modelling */ ? (react_1.default.createElement(create_pane_1.CreatePane, null)) : (react_1.default.createElement("label", { htmlFor: "toggleInteractiveElementsMode" },
                react_1.default.createElement("input", { id: "toggleInteractiveElementsMode", type: "checkbox", checked: this.props.view === "Exporting" /* ApollonView.Exporting */, onChange: this.toggleInteractiveElementsMode }),
                this.props.translate('views.highlight')))));
    };
    return SidebarComponent;
}(react_1.Component));
exports.Sidebar = enhance(SidebarComponent);
//# sourceMappingURL=sidebar-component.js.map